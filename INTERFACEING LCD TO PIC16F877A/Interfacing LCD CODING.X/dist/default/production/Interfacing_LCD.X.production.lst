

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 28 12:05:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0007                     _PORTC	set	7
   169  0042                     _RD2	set	66
   170  0041                     _RD1	set	65
   171  0040                     _RD0	set	64
   172  0088                     _TRISD	set	136
   173  0087                     _TRISC	set	135
   174                           
   175                           	psect	strings
   176  0003                     __pstrings:
   177  0003                     stringtab:
   178  0003                     __stringtab:
   179  0003                     stringcode:	
   180                           ;	String table - string pointers are 1 byte each
   181                           
   182  0003                     stringdir:
   183  0003  3000               	movlw	high stringdir
   184  0004  008A               	movwf	10
   185  0005  0804               	movf	4,w
   186  0006  0A84               	incf	4,f
   187  0007  0782               	addwf	2,f
   188  0008                     __stringbase:
   189  0008  3400               	retlw	0
   190  0009                     __end_of__stringtab:
   191  0009                     STR_1:
   192  0009  3445               	retlw	69	;'E'
   193  000A  344D               	retlw	77	;'M'
   194  000B  3442               	retlw	66	;'B'
   195  000C  3445               	retlw	69	;'E'
   196  000D  3444               	retlw	68	;'D'
   197  000E  3444               	retlw	68	;'D'
   198  000F  3445               	retlw	69	;'E'
   199  0010  3444               	retlw	68	;'D'
   200  0011  3400               	retlw	0
   201  0012                     STR_2:
   202  0012  3453               	retlw	83	;'S'
   203  0013  3459               	retlw	89	;'Y'
   204  0014  3453               	retlw	83	;'S'
   205  0015  3454               	retlw	84	;'T'
   206  0016  3445               	retlw	69	;'E'
   207  0017  344D               	retlw	77	;'M'
   208  0018  3453               	retlw	83	;'S'
   209  0019  3400               	retlw	0
   210                           
   211                           	psect	cinit
   212  07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215  07FC                     __initialization:
   216  07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  07FC                     __end_of__initialization:
   220  07FC  0183               	clrf	3
   221  07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:
   225  0070                     ?_lcd_data:
   226  0070                     ??_lcd_data:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_lcd_command:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_lcd_command:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_lcd_initializ:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0070                     	ds	2
   244  0072                     lcd_data@data:
   245                           
   246                           ; 1 bytes @ 0x2
   247  0072                     	ds	1
   248  0073                     ?_lcd_string:
   249  0073                     lcd_command@command:	
   250                           ; 1 bytes @ 0x3
   251                           
   252  0073                     lcd_string@length:	
   253                           ; 1 bytes @ 0x3
   254                           
   255                           
   256                           ; 1 bytes @ 0x3
   257  0073                     	ds	1
   258  0074                     ??_lcd_string:
   259  0074                     ??_lcd_initializ:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           ; 1 bytes @ 0x4
   264  0074                     	ds	1
   265  0075                     lcd_string@string:
   266                           
   267                           ; 1 bytes @ 0x5
   268  0075                     	ds	1
   269  0076                     lcd_string@i:
   270                           
   271                           ; 1 bytes @ 0x6
   272  0076                     	ds	1
   273  0077                     ??_main:
   274                           
   275                           ; 1 bytes @ 0x7
   276  0077                     	ds	1
   277                           
   278                           	psect	maintext
   279  07CF                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 48 in file "newmain.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          1       0       0       0       0
   302 ;;      Totals:         1       0       0       0       0
   303 ;;Total ram usage:        1 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		_lcd_command
   307 ;;		_lcd_initializ
   308 ;;		_lcd_string
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  07CF                     _main:
   317  07CF                     l679:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   320                           
   321                           
   322                           ;newmain.c: 52:     TRISC= 0x00;
   323  07CF  1683               	bsf	3,5	;RP0=1, select bank1
   324  07D0  1303               	bcf	3,6	;RP1=0, select bank1
   325  07D1  0187               	clrf	7	;volatile
   326                           
   327                           ;newmain.c: 53:     TRISD=0x00;
   328  07D2  0188               	clrf	8	;volatile
   329  07D3                     l681:
   330                           
   331                           ;newmain.c: 54:      lcd_initializ();
   332  07D3  120A  118A  279B  120A  118A  	fcall	_lcd_initializ
   333  07D8                     l683:
   334                           
   335                           ;newmain.c: 56:     {;newmain.c: 57:        lcd_command(0x83);
   336  07D8  3083               	movlw	131
   337  07D9  120A  118A  2782  120A  118A  	fcall	_lcd_command
   338  07DE                     l685:
   339                           
   340                           ;newmain.c: 58:        lcd_string("EMBEDDED",8);
   341  07DE  3008               	movlw	8
   342  07DF  00F7               	movwf	??_main
   343  07E0  0877               	movf	??_main,w
   344  07E1  00F3               	movwf	lcd_string@length
   345  07E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   346  07E3  120A  118A  27B4  120A  118A  	fcall	_lcd_string
   347  07E8                     l687:
   348                           
   349                           ;newmain.c: 59:        lcd_command(0xC3);
   350  07E8  30C3               	movlw	195
   351  07E9  120A  118A  2782  120A  118A  	fcall	_lcd_command
   352  07EE                     l689:
   353                           
   354                           ;newmain.c: 60:        lcd_string("SYSTEMS",7);
   355  07EE  3007               	movlw	7
   356  07EF  00F7               	movwf	??_main
   357  07F0  0877               	movf	??_main,w
   358  07F1  00F3               	movwf	lcd_string@length
   359  07F2  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   360  07F3  120A  118A  27B4  120A  118A  	fcall	_lcd_string
   361  07F8  2FD8               	goto	l683
   362  07F9  120A  118A  2800   	ljmp	start
   363  07FC                     __end_of_main:
   364                           
   365                           	psect	text1
   366  07B4                     __ptext1:	
   367 ;; *************** function _lcd_string *****************
   368 ;; Defined at:
   369 ;;		line 28 in file "newmain.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  string          1    wreg     PTR const unsigned char 
   372 ;;		 -> STR_2(8), STR_1(9), 
   373 ;;  length          1    3[COMMON] unsigned char 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  string          1    5[COMMON] PTR const unsigned char 
   376 ;;		 -> STR_2(8), STR_1(9), 
   377 ;;  i               1    6[COMMON] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         1       0       0       0       0
   388 ;;      Locals:         2       0       0       0       0
   389 ;;      Temps:          1       0       0       0       0
   390 ;;      Totals:         4       0       0       0       0
   391 ;;Total ram usage:        4 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		_lcd_data
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _lcd_string
   403  07B4                     _lcd_string:
   404                           
   405                           ;incstack = 0
   406                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   407                           ;lcd_string@string stored from wreg
   408  07B4  00F5               	movwf	lcd_string@string
   409  07B5                     l671:
   410                           
   411                           ;newmain.c: 28: void lcd_string (const unsigned char *string,unsigned char length);newma
      +                          in.c: 29: {;newmain.c: 30:     unsigned char i;;newmain.c: 31:     for(i=0;i<length;i++)
   412  07B5  01F6               	clrf	lcd_string@i
   413  07B6  2FC8               	goto	l677
   414  07B7                     l673:
   415                           
   416                           ;newmain.c: 32:     {;newmain.c: 33:         lcd_data(string[i]);
   417  07B7  0876               	movf	lcd_string@i,w
   418  07B8  0775               	addwf	lcd_string@string,w
   419  07B9  0084               	movwf	4
   420  07BA  120A  118A  2003  120A  118A  	fcall	stringdir
   421  07BF  120A  118A  276D  120A  118A  	fcall	_lcd_data
   422  07C4                     l675:
   423                           
   424                           ;newmain.c: 34:     }
   425  07C4  3001               	movlw	1
   426  07C5  00F4               	movwf	??_lcd_string
   427  07C6  0874               	movf	??_lcd_string,w
   428  07C7  07F6               	addwf	lcd_string@i,f
   429  07C8                     l677:
   430  07C8  0873               	movf	lcd_string@length,w
   431  07C9  0276               	subwf	lcd_string@i,w
   432  07CA  1C03               	skipc
   433  07CB  2FCD               	goto	u21
   434  07CC  2FCE               	goto	u20
   435  07CD                     u21:
   436  07CD  2FB7               	goto	l673
   437  07CE                     u20:
   438  07CE                     l26:
   439  07CE  0008               	return
   440  07CF                     __end_of_lcd_string:
   441                           
   442                           	psect	text2
   443  076D                     __ptext2:	
   444 ;; *************** function _lcd_data *****************
   445 ;; Defined at:
   446 ;;		line 8 in file "newmain.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  data            1    wreg     unsigned char 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  data            1    2[COMMON] unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         1       0       0       0       0
   462 ;;      Temps:          2       0       0       0       0
   463 ;;      Totals:         3       0       0       0       0
   464 ;;Total ram usage:        3 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_lcd_string
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _lcd_data
   475  076D                     _lcd_data:
   476                           
   477                           ;incstack = 0
   478                           ; Regs used in _lcd_data: [wreg]
   479                           ;lcd_data@data stored from wreg
   480  076D  00F2               	movwf	lcd_data@data
   481  076E                     l629:
   482                           
   483                           ;newmain.c: 8: void lcd_data(unsigned char data);newmain.c: 9: {;newmain.c: 10:     PORT
      +                          C =data;
   484  076E  0872               	movf	lcd_data@data,w
   485  076F  1283               	bcf	3,5	;RP0=0, select bank0
   486  0770  1303               	bcf	3,6	;RP1=0, select bank0
   487  0771  0087               	movwf	7	;volatile
   488  0772                     l631:
   489                           
   490                           ;newmain.c: 11:     RD0 =1;
   491  0772  1408               	bsf	8,0	;volatile
   492  0773                     l633:
   493                           
   494                           ;newmain.c: 12:     RD1=0;
   495  0773  1088               	bcf	8,1	;volatile
   496  0774                     l635:
   497                           
   498                           ;newmain.c: 13:     RD2=1;
   499  0774  1508               	bsf	8,2	;volatile
   500                           
   501                           ;newmain.c: 14:     _delay((unsigned long)((5)*(20000000/4000.0)));
   502  0775  3021               	movlw	33
   503  0776  00F1               	movwf	??_lcd_data+1
   504  0777  3076               	movlw	118
   505  0778  00F0               	movwf	??_lcd_data
   506  0779                     u37:
   507  0779  0BF0               	decfsz	??_lcd_data,f
   508  077A  2F79               	goto	u37
   509  077B  0BF1               	decfsz	??_lcd_data+1,f
   510  077C  2F79               	goto	u37
   511  077D  0000               	nop
   512  077E                     l637:
   513                           
   514                           ;newmain.c: 15:     RD2=0;
   515  077E  1283               	bcf	3,5	;RP0=0, select bank0
   516  077F  1303               	bcf	3,6	;RP1=0, select bank0
   517  0780  1108               	bcf	8,2	;volatile
   518  0781                     l17:
   519  0781  0008               	return
   520  0782                     __end_of_lcd_data:
   521                           
   522                           	psect	text3
   523  079B                     __ptext3:	
   524 ;; *************** function _lcd_initializ *****************
   525 ;; Defined at:
   526 ;;		line 38 in file "newmain.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 1
   547 ;; This function calls:
   548 ;;		_lcd_command
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _lcd_initializ
   556  079B                     _lcd_initializ:
   557  079B                     l657:	
   558                           ;incstack = 0
   559                           ; Regs used in _lcd_initializ: [wreg+status,2+status,0+pclath+cstack]
   560                           
   561                           
   562                           ;newmain.c: 40:     lcd_command(0x38);
   563  079B  3038               	movlw	56
   564  079C  120A  118A  2782  120A  118A  	fcall	_lcd_command
   565                           
   566                           ;newmain.c: 41:     lcd_command(0x06);
   567  07A1  3006               	movlw	6
   568  07A2  120A  118A  2782  120A  118A  	fcall	_lcd_command
   569                           
   570                           ;newmain.c: 42:     lcd_command(0x0C);
   571  07A7  300C               	movlw	12
   572  07A8  120A  118A  2782  120A  118A  	fcall	_lcd_command
   573                           
   574                           ;newmain.c: 43:     lcd_command(0x01);
   575  07AD  3001               	movlw	1
   576  07AE  120A  118A  2782  120A  118A  	fcall	_lcd_command
   577  07B3                     l29:
   578  07B3  0008               	return
   579  07B4                     __end_of_lcd_initializ:
   580                           
   581                           	psect	text4
   582  0782                     __ptext4:	
   583 ;; *************** function _lcd_command *****************
   584 ;; Defined at:
   585 ;;		line 18 in file "newmain.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  command         1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  command         1    3[COMMON] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0
   601 ;;      Temps:          3       0       0       0       0
   602 ;;      Totals:         4       0       0       0       0
   603 ;;Total ram usage:        4 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_lcd_initializ
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _lcd_command
   615  0782                     _lcd_command:
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _lcd_command: [wreg]
   619                           ;lcd_command@command stored from wreg
   620  0782  00F3               	movwf	lcd_command@command
   621  0783                     l639:
   622                           
   623                           ;newmain.c: 18: void lcd_command(unsigned char command);newmain.c: 19: {;newmain.c: 20: 
      +                              PORTC =command;
   624  0783  0873               	movf	lcd_command@command,w
   625  0784  1283               	bcf	3,5	;RP0=0, select bank0
   626  0785  1303               	bcf	3,6	;RP1=0, select bank0
   627  0786  0087               	movwf	7	;volatile
   628  0787                     l641:
   629                           
   630                           ;newmain.c: 21:     RD0 =0;
   631  0787  1008               	bcf	8,0	;volatile
   632  0788                     l643:
   633                           
   634                           ;newmain.c: 22:     RD1=0;
   635  0788  1088               	bcf	8,1	;volatile
   636  0789                     l645:
   637                           
   638                           ;newmain.c: 23:     RD2=1;
   639  0789  1508               	bsf	8,2	;volatile
   640                           
   641                           ;newmain.c: 24:     _delay((unsigned long)((50)*(20000000/4000.0)));
   642  078A  3002               	movlw	2
   643  078B  00F2               	movwf	??_lcd_command+2
   644  078C  3045               	movlw	69
   645  078D  00F1               	movwf	??_lcd_command+1
   646  078E  30A9               	movlw	169
   647  078F  00F0               	movwf	??_lcd_command
   648  0790                     u47:
   649  0790  0BF0               	decfsz	??_lcd_command,f
   650  0791  2F90               	goto	u47
   651  0792  0BF1               	decfsz	??_lcd_command+1,f
   652  0793  2F90               	goto	u47
   653  0794  0BF2               	decfsz	??_lcd_command+2,f
   654  0795  2F90               	goto	u47
   655  0796  2F97               	nop2
   656  0797                     l647:
   657                           
   658                           ;newmain.c: 25:     RD2=0;
   659  0797  1283               	bcf	3,5	;RP0=0, select bank0
   660  0798  1303               	bcf	3,6	;RP1=0, select bank0
   661  0799  1108               	bcf	8,2	;volatile
   662  079A                     l20:
   663  079A  0008               	return
   664  079B                     __end_of_lcd_command:
   665  007E                     btemp	set	126	;btemp
   666  007E                     wtemp0	set	126

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@string	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[8]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initializ->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     353
                                              7 COMMON     1     1      0
                        _lcd_command
                      _lcd_initializ
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     323
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initializ                                        0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initializ
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 28 12:05:07 2021

                      pc 0002             lcd_data@data 0072                       l20 079A  
                     l17 0781                       l26 07CE                       l29 07B3  
                     u20 07CE                       u21 07CD                       u37 0779  
                     u47 0790                       fsr 0004                      l631 0772  
                    l641 0787                      l633 0773                      l643 0788  
                    l635 0774                      l645 0789                      l637 077E  
                    l629 076E                      l647 0797                      l639 0783  
                    l671 07B5                      l657 079B                      l673 07B7  
                    l681 07D3                      l675 07C4                      l683 07D8  
                    l677 07C8                      l685 07DE                      l687 07E8  
                    l679 07CF                      l689 07EE                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      fsr0 0004  
                   STR_1 0009                     STR_2 0012                     _main 07CF  
                   btemp 007E                     start 0000              lcd_string@i 0076  
                  ?_main 0070                    _PORTC 0007                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
        ??_lcd_initializ 0074                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0077         __end_of_lcd_data 0782  
   __size_of_lcd_command 0019  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07CF                ?_lcd_data 0070               _lcd_string 07B4  
             __stringtab 0003                  __ptext1 07B4                  __ptext2 076D  
                __ptext3 079B                  __ptext4 0782               ??_lcd_data 0070  
   end_of_initialization 07FC    __end_of_lcd_initializ 07B4              ?_lcd_string 0073  
          ??_lcd_command 0070      start_initialization 07FC       lcd_command@command 0073  
    __end_of_lcd_command 079B      __size_of_lcd_string 001B                ___latbits 0002  
      __size_of_lcd_data 0015                __pstrings 0003              _lcd_command 0782  
            __stringbase 0008             ??_lcd_string 0074       __end_of_lcd_string 07CF  
     __end_of__stringtab 0009   __size_of_lcd_initializ 0019                 _lcd_data 076D  
          __size_of_main 002D                stringcode 0003            _lcd_initializ 079B  
               stringdir 0003                 stringtab 0003         lcd_string@length 0073  
       lcd_string@string 0075             ?_lcd_command 0070           ?_lcd_initializ 0070  
