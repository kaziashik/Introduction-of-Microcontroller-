

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 27 20:15:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  003A                     _RC2	set	58
   173  0039                     _RC1	set	57
   174  0038                     _RC0	set	56
   175  0047                     _RD7	set	71
   176  0046                     _RD6	set	70
   177  0045                     _RD5	set	69
   178  0044                     _RD4	set	68
   179  0043                     _RD3	set	67
   180  0042                     _RD2	set	66
   181  0041                     _RD1	set	65
   182  0040                     _RD0	set	64
   183  0033                     _RB3	set	51
   184  0032                     _RB2	set	50
   185  0037                     _RB7	set	55
   186  0036                     _RB6	set	54
   187  0035                     _RB5	set	53
   188  0034                     _RB4	set	52
   189  0086                     _TRISB	set	134
   190  043A                     _TRISC2	set	1082
   191  0439                     _TRISC1	set	1081
   192  0438                     _TRISC0	set	1080
   193  0447                     _TRISD7	set	1095
   194  0446                     _TRISD6	set	1094
   195  0445                     _TRISD5	set	1093
   196  0444                     _TRISD4	set	1092
   197  0443                     _TRISD3	set	1091
   198  0442                     _TRISD2	set	1090
   199  0441                     _TRISD1	set	1089
   200  0440                     _TRISD0	set	1088
   201                           
   202                           	psect	strings
   203  0003                     __pstrings:
   204  0003                     stringtab:
   205  0003                     __stringtab:
   206  0003                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209  0003                     stringdir:
   210  0003  3000               	movlw	high stringdir
   211  0004  008A               	movwf	10
   212  0005  0804               	movf	4,w
   213  0006  0A84               	incf	4,f
   214  0007  0782               	addwf	2,f
   215  0008                     __stringbase:
   216  0008  3400               	retlw	0
   217  0009                     __end_of__stringtab:
   218  0009                     STR_6:
   219  0009  3454               	retlw	84	;'T'
   220  000A  3448               	retlw	72	;'H'
   221  000B  3441               	retlw	65	;'A'
   222  000C  344E               	retlw	78	;'N'
   223  000D  344B               	retlw	75	;'K'
   224  000E  3420               	retlw	32	;' '
   225  000F  3459               	retlw	89	;'Y'
   226  0010  344F               	retlw	79	;'O'
   227  0011  3455               	retlw	85	;'U'
   228  0012  3420               	retlw	32	;' '
   229  0013  3453               	retlw	83	;'S'
   230  0014  3441               	retlw	65	;'A'
   231  0015  344C               	retlw	76	;'L'
   232  0016  3441               	retlw	65	;'A'
   233  0017  344D               	retlw	77	;'M'
   234  0018  342E               	retlw	46	;'.'
   235  0019  342E               	retlw	46	;'.'
   236  001A  342E               	retlw	46	;'.'
   237  001B  3400               	retlw	0
   238  001C                     STR_5:
   239  001C  3450               	retlw	80	;'P'
   240  001D  3472               	retlw	114	;'r'
   241  001E  3465               	retlw	101	;'e'
   242  001F  3473               	retlw	115	;'s'
   243  0020  3473               	retlw	115	;'s'
   244  0021  3420               	retlw	32	;' '
   245  0022  3453               	retlw	83	;'S'
   246  0023  3454               	retlw	84	;'T'
   247  0024  344F               	retlw	79	;'O'
   248  0025  3450               	retlw	80	;'P'
   249  0026  3400               	retlw	0
   250  0027                     STR_2:
   251  0027  3450               	retlw	80	;'P'
   252  0028  3452               	retlw	82	;'R'
   253  0029  3445               	retlw	69	;'E'
   254  002A  3453               	retlw	83	;'S'
   255  002B  3453               	retlw	83	;'S'
   256  002C  3420               	retlw	32	;' '
   257  002D  3453               	retlw	83	;'S'
   258  002E  3457               	retlw	87	;'W'
   259  002F  3431               	retlw	49	;'1'
   260  0030  3400               	retlw	0
   261  0031                     STR_3:
   262  0031  3450               	retlw	80	;'P'
   263  0032  3452               	retlw	82	;'R'
   264  0033  3445               	retlw	69	;'E'
   265  0034  3453               	retlw	83	;'S'
   266  0035  3453               	retlw	83	;'S'
   267  0036  3420               	retlw	32	;' '
   268  0037  3453               	retlw	83	;'S'
   269  0038  3457               	retlw	87	;'W'
   270  0039  3432               	retlw	50	;'2'
   271  003A  3400               	retlw	0
   272  003B                     STR_4:
   273  003B  3450               	retlw	80	;'P'
   274  003C  3452               	retlw	82	;'R'
   275  003D  3445               	retlw	69	;'E'
   276  003E  3453               	retlw	83	;'S'
   277  003F  3453               	retlw	83	;'S'
   278  0040  3420               	retlw	32	;' '
   279  0041  3453               	retlw	83	;'S'
   280  0042  3457               	retlw	87	;'W'
   281  0043  3433               	retlw	51	;'3'
   282  0044  3400               	retlw	0
   283  0045                     STR_1:
   284  0045  3457               	retlw	87	;'W'
   285  0046  3465               	retlw	101	;'e'
   286  0047  346C               	retlw	108	;'l'
   287  0048  3463               	retlw	99	;'c'
   288  0049  346F               	retlw	111	;'o'
   289  004A  346D               	retlw	109	;'m'
   290  004B  3465               	retlw	101	;'e'
   291  004C  3400               	retlw	0
   292                           
   293                           	psect	cinit
   294  07FC                     start_initialization:	
   295                           ; #config settings
   296                           
   297  07FC                     __initialization:
   298  07FC                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  07FC                     __end_of__initialization:
   302  07FC  0183               	clrf	3
   303  07FD  120A  118A  2F38   	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	cstackCOMMON
   306  0070                     __pcstackCOMMON:
   307  0070                     ?_Lcd_Port:
   308  0070                     ??_Lcd_Port:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_Lcd_Cmd:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_Lcd_Init:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_Lcd_Write_Char:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_Lcd_Write_String:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_Lcd_Clear:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_main:	
   327                           ; 2 bytes @ 0x0
   328                           
   329  0070                     Lcd_Port@a:	
   330                           ; 2 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334  0070                     	ds	1
   335  0071                     ??_Lcd_Cmd:
   336  0071                     ??_Lcd_Write_Char:	
   337                           ; 1 bytes @ 0x1
   338                           
   339                           
   340                           ; 1 bytes @ 0x1
   341  0071                     	ds	1
   342  0072                     Lcd_Write_Char@temp:
   343                           
   344                           ; 1 bytes @ 0x2
   345  0072                     	ds	1
   346  0073                     Lcd_Cmd@a:
   347  0073                     Lcd_Write_Char@y:	
   348                           ; 1 bytes @ 0x3
   349                           
   350                           
   351                           ; 1 bytes @ 0x3
   352  0073                     	ds	1
   353  0074                     ??_Lcd_Clear:
   354  0074                     ?_Lcd_Set_Cursor:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     ??_Lcd_Init:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     Lcd_Set_Cursor@b:	
   361                           ; 1 bytes @ 0x4
   362                           
   363  0074                     Lcd_Write_Char@a:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	1
   369  0075                     ??_Lcd_Set_Cursor:
   370  0075                     ??_Lcd_Write_String:	
   371                           ; 1 bytes @ 0x5
   372                           
   373  0075                     Lcd_Write_String@i:	
   374                           ; 1 bytes @ 0x5
   375                           
   376                           
   377                           ; 2 bytes @ 0x5
   378  0075                     	ds	2
   379  0077                     Lcd_Set_Cursor@a:
   380  0077                     Lcd_Write_String@a:	
   381                           ; 1 bytes @ 0x7
   382                           
   383                           
   384                           ; 1 bytes @ 0x7
   385  0077                     	ds	1
   386  0078                     Lcd_Set_Cursor@z:
   387                           
   388                           ; 1 bytes @ 0x8
   389  0078                     	ds	1
   390  0079                     Lcd_Set_Cursor@y:
   391                           
   392                           ; 1 bytes @ 0x9
   393  0079                     	ds	1
   394  007A                     Lcd_Set_Cursor@temp:
   395                           
   396                           ; 1 bytes @ 0xA
   397  007A                     	ds	1
   398  007B                     ??_main:
   399                           
   400                           ; 1 bytes @ 0xB
   401  007B                     	ds	3
   402                           
   403                           	psect	maintext
   404  0738                     __pmaintext:	
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 24 in file "newmain.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  a               2    0        int 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  2  105[None  ] int 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          3       0       0       0       0
   427 ;;      Totals:         3       0       0       0       0
   428 ;;Total ram usage:        3 bytes
   429 ;; Hardware stack levels required when called: 3
   430 ;; This function calls:
   431 ;;		_Lcd_Clear
   432 ;;		_Lcd_Init
   433 ;;		_Lcd_Set_Cursor
   434 ;;		_Lcd_Write_String
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  0738                     _main:
   443  0738                     l938:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;newmain.c: 26: 
   449  0738  1683               	bsf	3,5	;RP0=1, select bank1
   450  0739  1303               	bcf	3,6	;RP1=0, select bank1
   451  073A  0186               	clrf	6	;volatile
   452  073B                     l940:
   453                           
   454                           ;newmain.c: 28: 
   455  073B  1008               	bcf	8,0	;volatile
   456  073C                     l942:
   457                           
   458                           ;newmain.c: 29:     Lcd_Init();
   459  073C  1088               	bcf	8,1	;volatile
   460  073D                     l944:
   461                           
   462                           ;newmain.c: 30:     Lcd_Clear();
   463  073D  1108               	bcf	8,2	;volatile
   464  073E                     l946:
   465                           
   466                           ;newmain.c: 31:     Lcd_Set_Cursor(1,1);
   467  073E  1188               	bcf	8,3	;volatile
   468  073F                     l948:
   469                           
   470                           ;newmain.c: 32:     Lcd_Write_String("Welcome");
   471  073F  1208               	bcf	8,4	;volatile
   472  0740                     l950:
   473                           
   474                           ;newmain.c: 33:     Lcd_Set_Cursor(2,1);
   475  0740  1288               	bcf	8,5	;volatile
   476  0741                     l952:
   477                           
   478                           ;newmain.c: 34:     Lcd_Write_String("PRESS SW1");
   479  0741  1308               	bcf	8,6	;volatile
   480  0742                     l954:
   481                           
   482                           ;newmain.c: 35: 
   483  0742  1388               	bcf	8,7	;volatile
   484  0743                     l956:
   485                           
   486                           ;newmain.c: 37:     if(RC0 == 1) {
   487  0743  1407               	bsf	7,0	;volatile
   488  0744                     l958:
   489                           
   490                           ;newmain.c: 38:             Lcd_Clear();
   491  0744  1487               	bsf	7,1	;volatile
   492  0745                     l960:
   493                           
   494                           ;newmain.c: 39:             Lcd_Set_Cursor(1,1);
   495  0745  1507               	bsf	7,2	;volatile
   496  0746                     l962:
   497                           
   498                           ;newmain.c: 41:             _delay((unsigned long)((100)*(8000000/4000.0)));
   499  0746  1283               	bcf	3,5	;RP0=0, select bank0
   500  0747  1303               	bcf	3,6	;RP1=0, select bank0
   501  0748  1008               	bcf	8,0	;volatile
   502  0749                     l964:
   503                           
   504                           ;newmain.c: 42:             RD0 = 1;
   505  0749  1088               	bcf	8,1	;volatile
   506  074A                     l966:
   507                           
   508                           ;newmain.c: 43:             RD1 = 1;
   509  074A  1108               	bcf	8,2	;volatile
   510  074B                     l968:
   511                           
   512                           ;newmain.c: 44:             RD2 = 1;
   513  074B  1188               	bcf	8,3	;volatile
   514  074C                     l970:
   515                           
   516                           ;newmain.c: 45:             RD3 = 1;
   517  074C  1208               	bcf	8,4	;volatile
   518  074D                     l972:
   519                           
   520                           ;newmain.c: 46:             RD4 = 1;
   521  074D  1288               	bcf	8,5	;volatile
   522  074E                     l974:
   523                           
   524                           ;newmain.c: 47:             RD5 = 1;
   525  074E  1308               	bcf	8,6	;volatile
   526  074F                     l976:
   527                           
   528                           ;newmain.c: 48:             RD6 = 1;
   529  074F  1388               	bcf	8,7	;volatile
   530  0750                     l978:
   531  0750                     l980:
   532                           
   533                           ;newmain.c: 52:             Lcd_Clear();
   534  0750  120A  118A  26DB  120A  118A  	fcall	_Lcd_Init
   535  0755                     l982:
   536                           
   537                           ;newmain.c: 53:             Lcd_Set_Cursor(1,1);
   538  0755  120A  118A  25E2  120A  118A  	fcall	_Lcd_Clear
   539  075A                     l984:
   540                           
   541                           ;newmain.c: 54:             Lcd_Write_String("PRESS SW3");
   542  075A  01F4               	clrf	Lcd_Set_Cursor@b
   543  075B  0AF4               	incf	Lcd_Set_Cursor@b,f
   544  075C  3001               	movlw	1
   545  075D  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   546  0762                     l986:
   547                           
   548                           ;newmain.c: 55:             RD0 = 0;
   549  0762  303D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   550  0763  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   551  0768                     l988:
   552                           
   553                           ;newmain.c: 56:             RD1 = 1;
   554  0768  01F4               	clrf	Lcd_Set_Cursor@b
   555  0769  0AF4               	incf	Lcd_Set_Cursor@b,f
   556  076A  3002               	movlw	2
   557  076B  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   558  0770                     l990:
   559                           
   560                           ;newmain.c: 57:             RD2 = 0;
   561  0770  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   562  0771  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   563  0776                     l992:
   564                           
   565                           ;newmain.c: 60:             RD5 = 1;
   566  0776  1283               	bcf	3,5	;RP0=0, select bank0
   567  0777  1303               	bcf	3,6	;RP1=0, select bank0
   568  0778  1C07               	btfss	7,0	;volatile
   569  0779  2F7B               	goto	u191
   570  077A  2F7C               	goto	u190
   571  077B                     u191:
   572  077B  2FA7               	goto	l107
   573  077C                     u190:
   574  077C                     l994:
   575                           
   576                           ;newmain.c: 61:             RD6 = 0;
   577  077C  120A  118A  25E2  120A  118A  	fcall	_Lcd_Clear
   578                           
   579                           ;newmain.c: 62:             RD7 = 1;
   580  0781  01F4               	clrf	Lcd_Set_Cursor@b
   581  0782  0AF4               	incf	Lcd_Set_Cursor@b,f
   582  0783  3001               	movlw	1
   583  0784  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   584  0789                     l996:
   585                           
   586                           ;newmain.c: 63: 
   587  0789  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   588  078A  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   589  078F                     l998:
   590                           
   591                           ;newmain.c: 64:         } else if(RC2 == 1) {
   592  078F  3002               	movlw	2
   593  0790  00FD               	movwf	??_main+2
   594  0791  3004               	movlw	4
   595  0792  00FC               	movwf	??_main+1
   596  0793  30BA               	movlw	186
   597  0794  00FB               	movwf	??_main
   598  0795                     u227:
   599  0795  0BFB               	decfsz	??_main,f
   600  0796  2F95               	goto	u227
   601  0797  0BFC               	decfsz	??_main+1,f
   602  0798  2F95               	goto	u227
   603  0799  0BFD               	decfsz	??_main+2,f
   604  079A  2F95               	goto	u227
   605  079B  0000               	nop
   606  079C                     l1000:
   607                           
   608                           ;newmain.c: 65:             Lcd_Clear();
   609  079C  1283               	bcf	3,5	;RP0=0, select bank0
   610  079D  1303               	bcf	3,6	;RP1=0, select bank0
   611  079E  1408               	bsf	8,0	;volatile
   612  079F                     l1002:
   613                           
   614                           ;newmain.c: 66:             Lcd_Set_Cursor(1,1);
   615  079F  1488               	bsf	8,1	;volatile
   616  07A0                     l1004:
   617                           
   618                           ;newmain.c: 67:             Lcd_Write_String("Press STOP");
   619  07A0  1508               	bsf	8,2	;volatile
   620  07A1                     l1006:
   621                           
   622                           ;newmain.c: 68:             Lcd_Set_Cursor(2,1);
   623  07A1  1588               	bsf	8,3	;volatile
   624  07A2                     l1008:
   625                           
   626                           ;newmain.c: 69:             Lcd_Write_String("THANK YOU SALAM...");
   627  07A2  1608               	bsf	8,4	;volatile
   628  07A3                     l1010:
   629                           
   630                           ;newmain.c: 70:             RD0 = 1;
   631  07A3  1688               	bsf	8,5	;volatile
   632  07A4                     l1012:
   633                           
   634                           ;newmain.c: 71:             RD1 = 0;
   635  07A4  1708               	bsf	8,6	;volatile
   636  07A5                     l1014:
   637                           
   638                           ;newmain.c: 72:             RD2 = 1;
   639  07A5  1788               	bsf	8,7	;volatile
   640                           
   641                           ;newmain.c: 74:             RD4 = 1;
   642  07A6  2F76               	goto	l992
   643  07A7                     l107:
   644  07A7  1C87               	btfss	7,1	;volatile
   645  07A8  2FAA               	goto	u201
   646  07A9  2FAB               	goto	u200
   647  07AA                     u201:
   648  07AA  2FC8               	goto	l109
   649  07AB                     u200:
   650  07AB                     l1016:
   651                           
   652                           ;newmain.c: 75:             RD5 = 0;
   653  07AB  120A  118A  25E2  120A  118A  	fcall	_Lcd_Clear
   654                           
   655                           ;newmain.c: 76:             RD6 = 1;
   656  07B0  01F4               	clrf	Lcd_Set_Cursor@b
   657  07B1  0AF4               	incf	Lcd_Set_Cursor@b,f
   658  07B2  3001               	movlw	1
   659  07B3  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   660  07B8                     l1018:
   661                           
   662                           ;newmain.c: 77:             RD7 = 0;
   663  07B8  3033               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   664  07B9  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   665  07BE                     l1020:
   666                           
   667                           ;newmain.c: 78:         }
   668  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   669  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   670  07C0  1008               	bcf	8,0	;volatile
   671  07C1                     l1022:
   672                           
   673                           ;newmain.c: 79:     }
   674  07C1  1488               	bsf	8,1	;volatile
   675  07C2                     l1024:
   676                           
   677                           ;newmain.c: 80: 
   678  07C2  1108               	bcf	8,2	;volatile
   679  07C3                     l1026:
   680                           
   681                           ;newmain.c: 81: 
   682  07C3  1588               	bsf	8,3	;volatile
   683  07C4                     l1028:
   684                           
   685                           ;newmain.c: 82: 
   686  07C4  1208               	bcf	8,4	;volatile
   687  07C5                     l1030:
   688                           
   689                           ;newmain.c: 83:     return 0;
   690  07C5  1688               	bsf	8,5	;volatile
   691  07C6                     l1032:
   692                           
   693                           ;newmain.c: 84: }
   694  07C6  1308               	bcf	8,6	;volatile
   695  07C7  2FA5               	goto	l1014
   696  07C8                     l109:
   697  07C8  1D07               	btfss	7,2	;volatile
   698  07C9  2FCB               	goto	u211
   699  07CA  2FCC               	goto	u210
   700  07CB                     u211:
   701  07CB  2FF8               	goto	l108
   702  07CC                     u210:
   703  07CC                     l1036:
   704  07CC  120A  118A  25E2  120A  118A  	fcall	_Lcd_Clear
   705  07D1  01F4               	clrf	Lcd_Set_Cursor@b
   706  07D2  0AF4               	incf	Lcd_Set_Cursor@b,f
   707  07D3  3001               	movlw	1
   708  07D4  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   709  07D9                     l1038:
   710  07D9  3014               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   711  07DA  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   712  07DF                     l1040:
   713  07DF  01F4               	clrf	Lcd_Set_Cursor@b
   714  07E0  0AF4               	incf	Lcd_Set_Cursor@b,f
   715  07E1  3002               	movlw	2
   716  07E2  120A  118A  2689  120A  118A  	fcall	_Lcd_Set_Cursor
   717  07E7  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   718  07E8  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_String
   719  07ED                     l1042:
   720  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   721  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   722  07EF  1408               	bsf	8,0	;volatile
   723  07F0                     l1044:
   724  07F0  1088               	bcf	8,1	;volatile
   725  07F1                     l1046:
   726  07F1  1508               	bsf	8,2	;volatile
   727  07F2                     l1048:
   728  07F2  1188               	bcf	8,3	;volatile
   729  07F3                     l1050:
   730  07F3  1608               	bsf	8,4	;volatile
   731  07F4                     l1052:
   732  07F4  1288               	bcf	8,5	;volatile
   733  07F5                     l1054:
   734  07F5  1708               	bsf	8,6	;volatile
   735  07F6                     l1056:
   736  07F6  1388               	bcf	8,7	;volatile
   737  07F7  2F76               	goto	l992
   738  07F8                     l108:
   739  07F8  2F76               	goto	l992
   740  07F9  120A  118A  2800   	ljmp	start
   741  07FC                     __end_of_main:
   742                           
   743                           	psect	text1
   744  062B                     __ptext1:	
   745 ;; *************** function _Lcd_Write_String *****************
   746 ;; Defined at:
   747 ;;		line 97 in file "./lcd.h"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  a               1    wreg     PTR unsigned char 
   750 ;;		 -> STR_6(19), STR_5(11), STR_4(10), STR_3(10), 
   751 ;;		 -> STR_2(10), STR_1(8), 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  a               1    7[COMMON] PTR unsigned char 
   754 ;;		 -> STR_6(19), STR_5(11), STR_4(10), STR_3(10), 
   755 ;;		 -> STR_2(10), STR_1(8), 
   756 ;;  i               2    5[COMMON] int 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         3       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         3       0       0       0       0
   770 ;;Total ram usage:        3 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 2
   773 ;; This function calls:
   774 ;;		_Lcd_Write_Char
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _Lcd_Write_String
   782  062B                     _Lcd_Write_String:
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           ;Lcd_Write_String@a stored from wreg
   787  062B  00F7               	movwf	Lcd_Write_String@a
   788  062C                     l930:
   789                           
   790                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
   791  062C  01F5               	clrf	Lcd_Write_String@i
   792  062D  01F6               	clrf	Lcd_Write_String@i+1
   793  062E  2E42               	goto	l936
   794  062F                     l932:
   795                           
   796                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
   797  062F  0875               	movf	Lcd_Write_String@i,w
   798  0630  0777               	addwf	Lcd_Write_String@a,w
   799  0631  0084               	movwf	4
   800  0632  120A  118A  2003  120A  118A  	fcall	stringdir
   801  0637  120A  118A  2650  120A  118A  	fcall	_Lcd_Write_Char
   802  063C                     l934:
   803  063C  3001               	movlw	1
   804  063D  07F5               	addwf	Lcd_Write_String@i,f
   805  063E  1803               	skipnc
   806  063F  0AF6               	incf	Lcd_Write_String@i+1,f
   807  0640  3000               	movlw	0
   808  0641  07F6               	addwf	Lcd_Write_String@i+1,f
   809  0642                     l936:
   810  0642  0875               	movf	Lcd_Write_String@i,w
   811  0643  0777               	addwf	Lcd_Write_String@a,w
   812  0644  0084               	movwf	4
   813  0645  120A  118A  2003  120A  118A  	fcall	stringdir
   814  064A  3A00               	xorlw	0
   815  064B  1D03               	skipz
   816  064C  2E4E               	goto	u181
   817  064D  2E4F               	goto	u180
   818  064E                     u181:
   819  064E  2E2F               	goto	l932
   820  064F                     u180:
   821  064F                     l95:
   822  064F  0008               	return
   823  0650                     __end_of_Lcd_Write_String:
   824                           
   825                           	psect	text2
   826  0650                     __ptext2:	
   827 ;; *************** function _Lcd_Write_Char *****************
   828 ;; Defined at:
   829 ;;		line 81 in file "./lcd.h"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  a               1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  a               1    4[COMMON] unsigned char 
   834 ;;  y               1    3[COMMON] unsigned char 
   835 ;;  temp            1    2[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         3       0       0       0       0
   847 ;;      Temps:          1       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 1
   852 ;; This function calls:
   853 ;;		_Lcd_Port
   854 ;; This function is called by:
   855 ;;		_Lcd_Write_String
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _Lcd_Write_Char
   861  0650                     _Lcd_Write_Char:
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   865                           ;Lcd_Write_Char@a stored from wreg
   866  0650  00F4               	movwf	Lcd_Write_Char@a
   867  0651                     l726:
   868                           
   869                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
   870  0651  0874               	movf	Lcd_Write_Char@a,w
   871  0652  390F               	andlw	15
   872  0653  00F1               	movwf	??_Lcd_Write_Char
   873  0654  0871               	movf	??_Lcd_Write_Char,w
   874  0655  00F2               	movwf	Lcd_Write_Char@temp
   875                           
   876                           ;./lcd.h: 85:    y = a&0xF0;
   877  0656  0874               	movf	Lcd_Write_Char@a,w
   878  0657  39F0               	andlw	240
   879  0658  00F1               	movwf	??_Lcd_Write_Char
   880  0659  0871               	movf	??_Lcd_Write_Char,w
   881  065A  00F3               	movwf	Lcd_Write_Char@y
   882  065B                     l728:
   883                           
   884                           ;./lcd.h: 86:    RB2 = 1;
   885  065B  1283               	bcf	3,5	;RP0=0, select bank0
   886  065C  1303               	bcf	3,6	;RP1=0, select bank0
   887  065D  1506               	bsf	6,2	;volatile
   888  065E                     l730:
   889                           
   890                           ;./lcd.h: 87:    Lcd_Port(y>>4);
   891  065E  0873               	movf	Lcd_Write_Char@y,w
   892  065F  00F1               	movwf	??_Lcd_Write_Char
   893  0660  3004               	movlw	4
   894  0661                     u55:
   895  0661  1003               	clrc
   896  0662  0CF1               	rrf	??_Lcd_Write_Char,f
   897  0663  3EFF               	addlw	-1
   898  0664  1D03               	skipz
   899  0665  2E61               	goto	u55
   900  0666  0871               	movf	??_Lcd_Write_Char,w
   901  0667  120A  118A  2609  120A  118A  	fcall	_Lcd_Port
   902  066C                     l732:
   903                           
   904                           ;./lcd.h: 88:    RB3 = 1;
   905  066C  1283               	bcf	3,5	;RP0=0, select bank0
   906  066D  1303               	bcf	3,6	;RP1=0, select bank0
   907  066E  1586               	bsf	6,3	;volatile
   908  066F                     l734:
   909                           
   910                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   911  066F  301A               	movlw	26
   912  0670  00F1               	movwf	??_Lcd_Write_Char
   913  0671                     u237:
   914  0671  0BF1               	decfsz	??_Lcd_Write_Char,f
   915  0672  2E71               	goto	u237
   916  0673  0000               	nop
   917  0674                     l736:
   918                           
   919                           ;./lcd.h: 90:    RB3 = 0;
   920  0674  1283               	bcf	3,5	;RP0=0, select bank0
   921  0675  1303               	bcf	3,6	;RP1=0, select bank0
   922  0676  1186               	bcf	6,3	;volatile
   923  0677                     l738:
   924                           
   925                           ;./lcd.h: 91:    Lcd_Port(temp);
   926  0677  0872               	movf	Lcd_Write_Char@temp,w
   927  0678  120A  118A  2609  120A  118A  	fcall	_Lcd_Port
   928  067D                     l740:
   929                           
   930                           ;./lcd.h: 92:    RB3 = 1;
   931  067D  1283               	bcf	3,5	;RP0=0, select bank0
   932  067E  1303               	bcf	3,6	;RP1=0, select bank0
   933  067F  1586               	bsf	6,3	;volatile
   934  0680                     l742:
   935                           
   936                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   937  0680  301A               	movlw	26
   938  0681  00F1               	movwf	??_Lcd_Write_Char
   939  0682                     u247:
   940  0682  0BF1               	decfsz	??_Lcd_Write_Char,f
   941  0683  2E82               	goto	u247
   942  0684  0000               	nop
   943  0685                     l744:
   944                           
   945                           ;./lcd.h: 94:    RB3 = 0;
   946  0685  1283               	bcf	3,5	;RP0=0, select bank0
   947  0686  1303               	bcf	3,6	;RP1=0, select bank0
   948  0687  1186               	bcf	6,3	;volatile
   949  0688                     l89:
   950  0688  0008               	return
   951  0689                     __end_of_Lcd_Write_Char:
   952                           
   953                           	psect	text3
   954  0689                     __ptext3:	
   955 ;; *************** function _Lcd_Set_Cursor *****************
   956 ;; Defined at:
   957 ;;		line 41 in file "./lcd.h"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  a               1    wreg     unsigned char 
   960 ;;  b               1    4[COMMON] unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  a               1    7[COMMON] unsigned char 
   963 ;;  temp            1   10[COMMON] unsigned char 
   964 ;;  y               1    9[COMMON] unsigned char 
   965 ;;  z               1    8[COMMON] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         1       0       0       0       0
   976 ;;      Locals:         4       0       0       0       0
   977 ;;      Temps:          2       0       0       0       0
   978 ;;      Totals:         7       0       0       0       0
   979 ;;Total ram usage:        7 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 2
   982 ;; This function calls:
   983 ;;		_Lcd_Cmd
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _Lcd_Set_Cursor
   991  0689                     _Lcd_Set_Cursor:
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   995                           ;Lcd_Set_Cursor@a stored from wreg
   996  0689  00F7               	movwf	Lcd_Set_Cursor@a
   997  068A                     l910:
   998                           
   999                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  1000  068A  0377               	decf	Lcd_Set_Cursor@a,w
  1001  068B  1D03               	btfss	3,2
  1002  068C  2E8E               	goto	u141
  1003  068D  2E8F               	goto	u140
  1004  068E                     u141:
  1005  068E  2EB2               	goto	l920
  1006  068F                     u140:
  1007  068F                     l912:
  1008                           
  1009                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  1010  068F  0874               	movf	Lcd_Set_Cursor@b,w
  1011  0690  3E7F               	addlw	127
  1012  0691  00F5               	movwf	??_Lcd_Set_Cursor
  1013  0692  0875               	movf	??_Lcd_Set_Cursor,w
  1014  0693  00FA               	movwf	Lcd_Set_Cursor@temp
  1015                           
  1016                           ;./lcd.h: 47:   z = temp>>4;
  1017  0694  087A               	movf	Lcd_Set_Cursor@temp,w
  1018  0695  00F5               	movwf	??_Lcd_Set_Cursor
  1019  0696  3004               	movlw	4
  1020  0697                     u155:
  1021  0697  1003               	clrc
  1022  0698  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1023  0699  3EFF               	addlw	-1
  1024  069A  1D03               	skipz
  1025  069B  2E97               	goto	u155
  1026  069C  0875               	movf	??_Lcd_Set_Cursor,w
  1027  069D  00F6               	movwf	??_Lcd_Set_Cursor+1
  1028  069E  0876               	movf	??_Lcd_Set_Cursor+1,w
  1029  069F  00F8               	movwf	Lcd_Set_Cursor@z
  1030  06A0                     l914:
  1031                           
  1032                           ;./lcd.h: 48:   y = temp & 0x0F;
  1033  06A0  087A               	movf	Lcd_Set_Cursor@temp,w
  1034  06A1  390F               	andlw	15
  1035  06A2  00F5               	movwf	??_Lcd_Set_Cursor
  1036  06A3  0875               	movf	??_Lcd_Set_Cursor,w
  1037  06A4  00F9               	movwf	Lcd_Set_Cursor@y
  1038  06A5                     l916:
  1039                           
  1040                           ;./lcd.h: 49:   Lcd_Cmd(z);
  1041  06A5  0878               	movf	Lcd_Set_Cursor@z,w
  1042  06A6  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1043  06AB                     l918:
  1044                           
  1045                           ;./lcd.h: 50:   Lcd_Cmd(y);
  1046  06AB  0879               	movf	Lcd_Set_Cursor@y,w
  1047  06AC  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1048                           
  1049                           ;./lcd.h: 51:  }
  1050  06B1  2EDA               	goto	l83
  1051  06B2                     l920:
  1052  06B2  3002               	movlw	2
  1053  06B3  0677               	xorwf	Lcd_Set_Cursor@a,w
  1054  06B4  1D03               	btfss	3,2
  1055  06B5  2EB7               	goto	u161
  1056  06B6  2EB8               	goto	u160
  1057  06B7                     u161:
  1058  06B7  2EDA               	goto	l83
  1059  06B8                     u160:
  1060  06B8                     l922:
  1061                           
  1062                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  1063  06B8  0874               	movf	Lcd_Set_Cursor@b,w
  1064  06B9  3EBF               	addlw	191
  1065  06BA  00F5               	movwf	??_Lcd_Set_Cursor
  1066  06BB  0875               	movf	??_Lcd_Set_Cursor,w
  1067  06BC  00FA               	movwf	Lcd_Set_Cursor@temp
  1068                           
  1069                           ;./lcd.h: 55:   z = temp>>4;
  1070  06BD  087A               	movf	Lcd_Set_Cursor@temp,w
  1071  06BE  00F5               	movwf	??_Lcd_Set_Cursor
  1072  06BF  3004               	movlw	4
  1073  06C0                     u175:
  1074  06C0  1003               	clrc
  1075  06C1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1076  06C2  3EFF               	addlw	-1
  1077  06C3  1D03               	skipz
  1078  06C4  2EC0               	goto	u175
  1079  06C5  0875               	movf	??_Lcd_Set_Cursor,w
  1080  06C6  00F6               	movwf	??_Lcd_Set_Cursor+1
  1081  06C7  0876               	movf	??_Lcd_Set_Cursor+1,w
  1082  06C8  00F8               	movwf	Lcd_Set_Cursor@z
  1083  06C9                     l924:
  1084                           
  1085                           ;./lcd.h: 56:   y = temp & 0x0F;
  1086  06C9  087A               	movf	Lcd_Set_Cursor@temp,w
  1087  06CA  390F               	andlw	15
  1088  06CB  00F5               	movwf	??_Lcd_Set_Cursor
  1089  06CC  0875               	movf	??_Lcd_Set_Cursor,w
  1090  06CD  00F9               	movwf	Lcd_Set_Cursor@y
  1091  06CE                     l926:
  1092                           
  1093                           ;./lcd.h: 57:   Lcd_Cmd(z);
  1094  06CE  0878               	movf	Lcd_Set_Cursor@z,w
  1095  06CF  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1096  06D4                     l928:
  1097                           
  1098                           ;./lcd.h: 58:   Lcd_Cmd(y);
  1099  06D4  0879               	movf	Lcd_Set_Cursor@y,w
  1100  06D5  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1101  06DA                     l83:
  1102  06DA  0008               	return
  1103  06DB                     __end_of_Lcd_Set_Cursor:
  1104                           
  1105                           	psect	text4
  1106  06DB                     __ptext4:	
  1107 ;; *************** function _Lcd_Init *****************
  1108 ;; Defined at:
  1109 ;;		line 62 in file "./lcd.h"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          2       0       0       0       0
  1126 ;;      Totals:         2       0       0       0       0
  1127 ;;Total ram usage:        2 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 2
  1130 ;; This function calls:
  1131 ;;		_Lcd_Cmd
  1132 ;;		_Lcd_Port
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _Lcd_Init
  1140  06DB                     _Lcd_Init:
  1141  06DB                     l768:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1144                           
  1145                           
  1146                           ;./lcd.h: 64:   Lcd_Port(0x00);
  1147  06DB  3000               	movlw	0
  1148  06DC  120A  118A  2609  120A  118A  	fcall	_Lcd_Port
  1149  06E1                     l770:
  1150                           
  1151                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1152  06E1  3034               	movlw	52
  1153  06E2  00F5               	movwf	??_Lcd_Init+1
  1154  06E3  30F1               	movlw	241
  1155  06E4  00F4               	movwf	??_Lcd_Init
  1156  06E5                     u257:
  1157  06E5  0BF4               	decfsz	??_Lcd_Init,f
  1158  06E6  2EE5               	goto	u257
  1159  06E7  0BF5               	decfsz	??_Lcd_Init+1,f
  1160  06E8  2EE5               	goto	u257
  1161  06E9  2EEA               	nop2
  1162  06EA                     l772:
  1163                           
  1164                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  1165  06EA  3003               	movlw	3
  1166  06EB  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1167                           
  1168                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1169  06F0  300D               	movlw	13
  1170  06F1  00F5               	movwf	??_Lcd_Init+1
  1171  06F2  30FB               	movlw	251
  1172  06F3  00F4               	movwf	??_Lcd_Init
  1173  06F4                     u267:
  1174  06F4  0BF4               	decfsz	??_Lcd_Init,f
  1175  06F5  2EF4               	goto	u267
  1176  06F6  0BF5               	decfsz	??_Lcd_Init+1,f
  1177  06F7  2EF4               	goto	u267
  1178  06F8  2EF9               	nop2
  1179  06F9                     l774:
  1180                           
  1181                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  1182  06F9  3003               	movlw	3
  1183  06FA  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1184  06FF                     l776:
  1185                           
  1186                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1187  06FF  301D               	movlw	29
  1188  0700  00F5               	movwf	??_Lcd_Init+1
  1189  0701  3091               	movlw	145
  1190  0702  00F4               	movwf	??_Lcd_Init
  1191  0703                     u277:
  1192  0703  0BF4               	decfsz	??_Lcd_Init,f
  1193  0704  2F03               	goto	u277
  1194  0705  0BF5               	decfsz	??_Lcd_Init+1,f
  1195  0706  2F03               	goto	u277
  1196                           
  1197                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  1198  0707  3003               	movlw	3
  1199  0708  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1200                           
  1201                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  1202  070D  3002               	movlw	2
  1203  070E  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1204                           
  1205                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  1206  0713  3002               	movlw	2
  1207  0714  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1208                           
  1209                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  1210  0719  3008               	movlw	8
  1211  071A  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1212                           
  1213                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  1214  071F  3000               	movlw	0
  1215  0720  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1216                           
  1217                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  1218  0725  300C               	movlw	12
  1219  0726  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1220                           
  1221                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  1222  072B  3000               	movlw	0
  1223  072C  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1224                           
  1225                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  1226  0731  3006               	movlw	6
  1227  0732  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1228  0737                     l86:
  1229  0737  0008               	return
  1230  0738                     __end_of_Lcd_Init:
  1231                           
  1232                           	psect	text5
  1233  05E2                     __ptext5:	
  1234 ;; *************** function _Lcd_Clear *****************
  1235 ;; Defined at:
  1236 ;;		line 35 in file "./lcd.h"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  2   76[None  ] int 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 2
  1257 ;; This function calls:
  1258 ;;		_Lcd_Cmd
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _Lcd_Clear
  1266  05E2                     _Lcd_Clear:
  1267  05E2                     l746:	
  1268                           ;incstack = 0
  1269                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1270                           
  1271                           
  1272                           ;./lcd.h: 37:  Lcd_Cmd(0);
  1273  05E2  3000               	movlw	0
  1274  05E3  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1275                           
  1276                           ;./lcd.h: 38:  Lcd_Cmd(1);
  1277  05E8  3001               	movlw	1
  1278  05E9  120A  118A  25EF  120A  118A  	fcall	_Lcd_Cmd
  1279  05EE                     l77:
  1280  05EE  0008               	return
  1281  05EF                     __end_of_Lcd_Clear:
  1282                           
  1283                           	psect	text6
  1284  05EF                     __ptext6:	
  1285 ;; *************** function _Lcd_Cmd *****************
  1286 ;; Defined at:
  1287 ;;		line 26 in file "./lcd.h"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  a               1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  a               1    3[COMMON] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0
  1303 ;;      Temps:          2       0       0       0       0
  1304 ;;      Totals:         3       0       0       0       0
  1305 ;;Total ram usage:        3 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 1
  1308 ;; This function calls:
  1309 ;;		_Lcd_Port
  1310 ;; This function is called by:
  1311 ;;		_Lcd_Clear
  1312 ;;		_Lcd_Set_Cursor
  1313 ;;		_Lcd_Init
  1314 ;;		_Lcd_Shift_Right
  1315 ;;		_Lcd_Shift_Left
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _Lcd_Cmd
  1321  05EF                     _Lcd_Cmd:
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1325                           ;Lcd_Cmd@a stored from wreg
  1326  05EF  00F3               	movwf	Lcd_Cmd@a
  1327  05F0                     l716:
  1328                           
  1329                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  1330  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1331  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1332  05F2  1106               	bcf	6,2	;volatile
  1333  05F3                     l718:
  1334                           
  1335                           ;./lcd.h: 29:  Lcd_Port(a);
  1336  05F3  0873               	movf	Lcd_Cmd@a,w
  1337  05F4  120A  118A  2609  120A  118A  	fcall	_Lcd_Port
  1338  05F9                     l720:
  1339                           
  1340                           ;./lcd.h: 30:  RB3 = 1;
  1341  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05FB  1586               	bsf	6,3	;volatile
  1344  05FC                     l722:
  1345                           
  1346                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1347  05FC  300B               	movlw	11
  1348  05FD  00F2               	movwf	??_Lcd_Cmd+1
  1349  05FE  3062               	movlw	98
  1350  05FF  00F1               	movwf	??_Lcd_Cmd
  1351  0600                     u287:
  1352  0600  0BF1               	decfsz	??_Lcd_Cmd,f
  1353  0601  2E00               	goto	u287
  1354  0602  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1355  0603  2E00               	goto	u287
  1356  0604  0000               	nop
  1357  0605                     l724:
  1358                           
  1359                           ;./lcd.h: 32:         RB3 = 0;
  1360  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0607  1186               	bcf	6,3	;volatile
  1363  0608                     l74:
  1364  0608  0008               	return
  1365  0609                     __end_of_Lcd_Cmd:
  1366                           
  1367                           	psect	text7
  1368  0609                     __ptext7:	
  1369 ;; *************** function _Lcd_Port *****************
  1370 ;; Defined at:
  1371 ;;		line 4 in file "./lcd.h"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  a               1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  a               1    0[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0
  1388 ;;      Totals:         1       0       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_Lcd_Cmd
  1395 ;;		_Lcd_Init
  1396 ;;		_Lcd_Write_Char
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _Lcd_Port
  1402  0609                     _Lcd_Port:
  1403                           
  1404                           ;incstack = 0
  1405                           ; Regs used in _Lcd_Port: [wreg]
  1406                           ;Lcd_Port@a stored from wreg
  1407  0609  00F0               	movwf	Lcd_Port@a
  1408  060A                     l706:
  1409                           
  1410                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  1411  060A  1C70               	btfss	Lcd_Port@a,0
  1412  060B  2E0D               	goto	u11
  1413  060C  2E0E               	goto	u10
  1414  060D                     u11:
  1415  060D  2E12               	goto	l63
  1416  060E                     u10:
  1417  060E                     l708:
  1418                           
  1419                           ;./lcd.h: 7:   RB4 = 1;
  1420  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1421  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0610  1606               	bsf	6,4	;volatile
  1423  0611  2E15               	goto	l64
  1424  0612                     l63:	
  1425                           ;./lcd.h: 8:  else
  1426                           
  1427                           
  1428                           ;./lcd.h: 9:   RB4 = 0;
  1429  0612  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0613  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0614  1206               	bcf	6,4	;volatile
  1432  0615                     l64:
  1433                           
  1434                           ;./lcd.h: 11:  if(a & 2)
  1435  0615  1CF0               	btfss	Lcd_Port@a,1
  1436  0616  2E18               	goto	u21
  1437  0617  2E19               	goto	u20
  1438  0618                     u21:
  1439  0618  2E1B               	goto	l65
  1440  0619                     u20:
  1441  0619                     l710:
  1442                           
  1443                           ;./lcd.h: 12:   RB5 = 1;
  1444  0619  1686               	bsf	6,5	;volatile
  1445  061A  2E1C               	goto	l66
  1446  061B                     l65:	
  1447                           ;./lcd.h: 13:  else
  1448                           
  1449                           
  1450                           ;./lcd.h: 14:   RB5 = 0;
  1451  061B  1286               	bcf	6,5	;volatile
  1452  061C                     l66:
  1453                           
  1454                           ;./lcd.h: 16:  if(a & 4)
  1455  061C  1D70               	btfss	Lcd_Port@a,2
  1456  061D  2E1F               	goto	u31
  1457  061E  2E20               	goto	u30
  1458  061F                     u31:
  1459  061F  2E22               	goto	l67
  1460  0620                     u30:
  1461  0620                     l712:
  1462                           
  1463                           ;./lcd.h: 17:   RB6 = 1;
  1464  0620  1706               	bsf	6,6	;volatile
  1465  0621  2E23               	goto	l68
  1466  0622                     l67:	
  1467                           ;./lcd.h: 18:  else
  1468                           
  1469                           
  1470                           ;./lcd.h: 19:   RB6 = 0;
  1471  0622  1306               	bcf	6,6	;volatile
  1472  0623                     l68:
  1473                           
  1474                           ;./lcd.h: 21:  if(a & 8)
  1475  0623  1DF0               	btfss	Lcd_Port@a,3
  1476  0624  2E26               	goto	u41
  1477  0625  2E27               	goto	u40
  1478  0626                     u41:
  1479  0626  2E29               	goto	l69
  1480  0627                     u40:
  1481  0627                     l714:
  1482                           
  1483                           ;./lcd.h: 22:   RB7 = 1;
  1484  0627  1786               	bsf	6,7	;volatile
  1485  0628  2E2A               	goto	l71
  1486  0629                     l69:	
  1487                           ;./lcd.h: 23:  else
  1488                           
  1489                           
  1490                           ;./lcd.h: 24:   RB7 = 0;
  1491  0629  1386               	bcf	6,7	;volatile
  1492  062A                     l71:
  1493  062A  0008               	return
  1494  062B                     __end_of_Lcd_Port:
  1495  007E                     btemp	set	126	;btemp
  1496  007E                     wtemp0	set	126
  1497                           
  1498                           	psect	config
  1499                           
  1500                           ;Config register CONFIG @ 0x2007
  1501                           ;	Oscillator Selection bits
  1502                           ;	FOSC = HS, HS oscillator
  1503                           ;	Watchdog Timer Enable bit
  1504                           ;	WDTE = OFF, WDT disabled
  1505                           ;	Power-up Timer Enable bit
  1506                           ;	PWRTE = OFF, PWRT disabled
  1507                           ;	Brown-out Reset Enable bit
  1508                           ;	BOREN = ON, BOR enabled
  1509                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1510                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1511                           ;	Data EEPROM Memory Code Protection bit
  1512                           ;	CPD = OFF, Data EEPROM code protection off
  1513                           ;	Flash Program Memory Write Enable bits
  1514                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1515                           ;	In-Circuit Debugger Mode bit
  1516                           ;	DEBUG = 0x1, unprogrammed default
  1517                           ;	Flash Program Memory Code Protection bit
  1518                           ;	CP = OFF, Code protection off
  1519  2007                     	org	8199
  1520  2007  3F7A               	dw	16250

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 19
		 -> STR_6(CODE[19]), STR_5(CODE[11]), STR_4(CODE[10]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1420
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     408
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     801
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 27 20:15:07 2021

                        pc 0002                         l71 062A                         l63 0612  
                       l64 0615                         l65 061B                         l66 061C  
                       l74 0608                         l67 0622                         l83 06DA  
                       l68 0623                         l69 0629                         l77 05EE  
                       l86 0737                         l95 064F                         l89 0688  
                       u10 060E                         u11 060D                         u20 0619  
                       u21 0618                         u30 0620                         u31 061F  
                       u40 0627                         u41 0626                         u55 0661  
                       fsr 0004                        l107 07A7                        l108 07F8  
                      l109 07C8                        l710 0619                        l712 0620  
                      l720 05F9                        l714 0627                        l706 060A  
                      l722 05FC                        l730 065E                        l708 060E  
                      l724 0605                        l716 05F0                        l740 067D  
                      l732 066C                        l718 05F3                        l910 068A  
                      l742 0680                        l734 066F                        l726 0651  
                      l912 068F                        l920 06B2                        l744 0685  
                      l736 0674                        l728 065B                        l746 05E2  
                      l770 06E1                        l922 06B8                        l914 06A0  
                      l738 0677                        l930 062C                        l772 06EA  
                      l924 06C9                        l916 06A5                        l932 062F  
                      l940 073B                        l774 06F9                        l926 06CE  
                      l918 06AB                        l934 063C                        l950 0740  
                      l942 073C                        l776 06FF                        l768 06DB  
                      l928 06D4                        l936 0642                        l960 0745  
                      l952 0741                        l944 073D                        l970 074C  
                      l962 0746                        l954 0742                        l946 073E  
                      l938 0738                        l980 0750                        l972 074D  
                      l964 0749                        l956 0743                        l948 073F  
                      l990 0770                        l982 0755                        l974 074E  
                      l966 074A                        l958 0744                        l992 0776  
                      l984 075A                        l976 074F                        l968 074B  
                      l994 077C                        l986 0762                        l978 0750  
                      l996 0789                        l988 0768                        l998 078F  
                      _RB2 0032                        _RC0 0038                        _RB3 0033  
                      _RC1 0039                        _RB4 0034                        _RD0 0040  
                      _RC2 003A                        _RB5 0035                        _RD1 0041  
                      _RB6 0036                        _RD2 0042                        _RB7 0037  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u200 07AB  
                      u201 07AA                        u210 07CC                        u211 07CB  
                      u140 068F                        u141 068E                        u160 06B8  
                      u161 06B7                        u155 0697                        u227 0795  
                      u180 064F                        u237 0671                        u181 064E  
                      u190 077C                        u175 06C0                        u247 0682  
                      u191 077B                        u257 06E5                        u267 06F4  
                      u277 0703                        u287 0600                        fsr0 0004  
                     l1000 079C                       l1010 07A3                       l1002 079F  
                     l1020 07BE                       l1012 07A4                       l1004 07A0  
                     l1030 07C5                       l1022 07C1                       l1014 07A5  
                     l1006 07A1                       l1040 07DF                       l1032 07C6  
                     l1024 07C2                       l1016 07AB                       l1008 07A2  
                     l1050 07F3                       l1042 07ED                       l1026 07C3  
                     l1018 07B8                       l1052 07F4                       l1044 07F0  
                     l1036 07CC                       l1028 07C4                       l1054 07F5  
                     l1046 07F1                       l1038 07D9                       l1056 07F6  
                     l1048 07F2                       STR_1 0045                       STR_2 0027  
                     STR_3 0031                       STR_4 003B                       STR_5 001C  
                     STR_6 0009          ?_Lcd_Write_String 0070                       _main 0738  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 0609                      ?_main 0070    __size_of_Lcd_Set_Cursor 0052  
                    _TRISB 0086                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0738           __end_of_Lcd_Port 062B  
          __initialization 07FC               __end_of_main 07FC                     ??_main 007B  
       __size_of_Lcd_Clear 000D                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _TRISC0 0438                     _TRISC1 0439                     _TRISD0 0440  
                   _TRISC2 043A                     _TRISD1 0441                     _TRISD2 0442  
                   _TRISD3 0443                     _TRISD4 0444                     _TRISD5 0445  
                   _TRISD6 0446                     _TRISD7 0447            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 05EF             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0689                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 0738  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06DB  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 0650                    _Lcd_Cmd 05EF            ?_Lcd_Set_Cursor 0074  
                  __ptext1 062B                    __ptext2 0650                    __ptext3 0689  
                  __ptext4 06DB                    __ptext5 05E2                    __ptext6 05EF  
                  __ptext7 0609     __end_of_Lcd_Write_Char 0689       end_of_initialization 07FC  
                Lcd_Port@a 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                  _Lcd_Clear 05E2           _Lcd_Write_String 062B  
      start_initialization 07FC          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06DB  
                 _Lcd_Port 0609   __end_of_Lcd_Write_String 0650           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009              __size_of_main 00C4         Lcd_Write_Char@temp 0072  
                stringcode 0003         Lcd_Set_Cursor@temp 007A                   stringdir 0003  
                 stringtab 0003  
